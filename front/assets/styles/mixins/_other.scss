@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin middle-inline-block() {
  display: inline-block;
  vertical-align: middle;
}

@mixin css-triangle(
  $color,
	$direction,
	$size: 6px,
	$position: absolute,
	$round: false,
	$size-y: $size
) {
  @include pseudo($pos: $position);
  height: 0;
  width: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size-y solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &::placeholder {
    @content;
  }
}

@mixin flex-container(
  $direction: row,
	$justifyContent: center,
	$alignContent: center,
	$alignItems: center
) {
  align-content: $alignContent;
  align-items: $alignItems;
  display: flex;
  flex-direction: $direction;
  flex-wrap: nowrap;
  justify-content: $justifyContent;
}

@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

$spaceamounts: (5, 10, 15, 20, 30, 40, 50); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .m#{str-slice($side, 0, 1)}#{$space} {
      margin-#{$side}: #{$space}px; //; // !important;
    }
    // .p-#{str-slice($side, 0, 1)}-#{$space} {
    //   padding-#{$side}: #{$space}px; // !important;
    // }
  }
}

@mixin form-item {
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
}

%form-item {
  @include form-item;
}

%transition {
  transition: all 0.3s ease;
}
